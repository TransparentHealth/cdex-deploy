---

- name: "create base app directory: {{ base_app_directory }}"
  become_user: "{{ remote_admin_account }}"
  become: yes
  file:
    path: "{{ base_app_directory }}"
    state: directory

- name: "remove directory"
  become_user: "{{ remote_admin_account }}"
  become: yes
  file:
    path: "{{ base_app_directory }}/{{ role_type }}/"
    state: absent

- name: "Get the {{role_type }} app from github"
  become_user: "{{ remote_admin_account }}"
  become: yes
  git:
    repo: "https://github.com/TransparentHealth/{{ role_type }}.git"
    dest: "{{ base_app_directory }}/{{ role_type }}"
    force: yes
    clone: yes

- name: "Create Virtualenv"
  become_user: "{{ remote_admin_account }}"
  become: yes
#  shell: "cd {{ base_app_directory }}/{{ role_type }}; {{ python_bin_dir }}/python{{ python_ver }} -m venv {{ virtual_env_dir }}"
  shell: "cd {{ base_app_directory }}/{{ role_type }}; virtualenv --python=python3.6 {{ virtual_env_dir }}"

- name: Ensure group "www-data" exists
  become_user: "{{ remote_admin_account }}"
  become: yes
  group:
    name: "{{ app_group }}"
    state: present

- name: "Set permissions to application code"
  become_user: "{{ remote_admin_account }}"
  become: yes
  file:
    dest: "{{ base_app_directory }}/{{ role_type }}"
    state: directory
    recurse: yes
    owner: "{{ app_pyapps_user }}"
    group: "{{ app_group }}"
    mode: 0755

- name: "set ownership to pyapps:www-data ({{ app_pyapps_user }}:{{ app_group }})"
  become_user: "{{ remote_admin_account }}"
  become: yes
  file:
    owner: "{{ app_pyapps_user }}"
    group: "{{ app_group }}"
    dest: "{{ base_app_directory }}/{{ role_type }}/{{ virtual_env_dir }}"
    state: directory
    recurse: yes

- name: "set permissions to application code ( {{ app_pyapps_user }}:{{ app_group }} )"
  become_user: "{{ remote_admin_account }}"
  become: yes
  file:
    dest: "{{ base_app_directory}}/{{ role_type }}"
    state: directory
    recurse: yes
    owner: "{{ app_pyapps_user }}"
    group: "{{ app_group }}"
    mode: 0755

- name: "install requirements"
  become_user: "{{ remote_admin_account }}"
  become: yes
  pip:
    chdir: "{{ base_app_directory }}/{{ role_type}}"
    requirements: "requirements.txt"
    virtualenv: "{{ base_app_directory }}/{{ role_type }}/{{ virtual_env_dir }}"

#  shell: |
#    source {{ base_app_directory }}/{{ role_type}}/{{ virtual_env_dir }}/bin/activate && make reqs-install
#  args:
#    chdir: "{{ app_pyapp_home }}/{{ common_project_name }}"

- name: "install boto3 for collectstatic"
  become_user: "{{ remote_admin_account }}"
  become: yes
  pip:
    name: boto3
    # version: 1.9.42
    state: present
    extra_args: " --upgrade {{ pip_extra_args }} "
    virtualenv: "{{ base_app_directory }}/{{ role_type }}/{{ virtual_env_dir }}"

- # import_tasks: ./../appherd/roles/create_certstore/tasks/main.yml

# change ownership of files
- name: "Update file ownership"
  become_user: "{{ remote_admin_account }}"
  become: yes
  file:
    path: "{{ base_app_directory }}/{{ role_type }}/"
    recurse: yes
    owner: "{{ app_owner }}"
    group: "{{ app_group }}"
    mode:  "u+rw,g+rw,o-rwx"

# Change ownership for libraries
- name: "Change ownership for libraries"
  become_user: "{{ remote_admin_account }}"
  become: yes
  file:
    path: "{{ base_app_directory }}/{{ role_type }}/{{ virtual_env_dir }}"
    recurse: yes
    owner: "{{ app_owner }}"
    group: "{{ app_group }}"
    mode:  "u+rw,g+rw,o-rwx"

- name: make manage.py executable
  become_user: "{{ remote_admin_account }}"
  become: yes
  file:
    path: "{{ base_app_directory }}/{{ role_type }}/manage.py"
    state: touch
    mode: "u+rwx,g+rwx,o-rwx"
