# which settings file should Django use
export DJANGO_SETTINGS_MODULE={{ system_repository_name[role_type] }}.settings
export DJANGO_SETTINGS_MODULE=$DJANGO_SETTINGS_MODULE


export OIDC_ISSUER={{ http_mode }}://{{ dns_app_name['vmi'] }}
export OIDC_PROVIDER={{ http_mode }}://{{ dns_app_name['vmi'] }}

export ALLOWED_HOSTS={{ app_allowed_hosts }}

# Alternate Values for superuser
export DJANGO_SUPERUSER_USERNAME={{ app_pyapps_user }}
export DJANGO_SUPERUSER_PASSWORD={{ app_pyapps_pwd }}
export DJANGO_SUPERUSER_EMAIL={{ app_django_superuser_email }}
export DJANGO_SUPERUSER_FIRSTNAME={{ app_django_superuser_firstname }}
export DJANGO_SUPERUSER_LASTNAME={{ app_django_superuser_lastname }}

# Deprecated
# ROOT_USER / ROOT_USER_PASSWORD are deprecated
export ROOT_USER={{ app_pyapps_user }}
export ROOT_PASSWORD={{ app_pyapps_pwd }}

# We arent using the AWS credentials but soon will be based on emerging requirements
# AWS Settings
export AWS_DEFAULT_REGION={{ aws_region }}
export AWS_ACCESS_KEY_ID={{ aws_access_key }}
export AWS_SECRET_ACCESS_KEY={{ aws_secret_key }}

export AWS_STORAGE_BUCKET_NAME={{ vpc_env }}-media-storage-{{ system_full_name[role_type] }}

export DEFAULT_FILE_STORAGE=storages.backends.s3boto3.S3Boto3Storage

# TODO Add OIDC PUB AND PRIVATE KEYS

##########################################
# Connection to Verify My Identity (VMI) #
##########################################
export VMI_OAUTH_NAME={{ app_vmi_oauth_name }}
# The URL for the VMI server
export VMI_OAUTH_HOST={{ http_mode }}://{{ dns_app_name['vmi'] }}
# You will need to register an application on the VMI server.
# VMI_OATH_KEY is the application's 'Client id'.
export VMI_OAUTH_KEY="{{ app_vmi_oauth_key }}"
# You will need to register an application on the VMI server.
# VMI_OATH_SECRET is the application's 'Client secret'.
export VMI_OAUTH_SECRET="{{ app_vmi_oauth_secret }}"

###############################
# Connection to ShareMyHealth #
###############################
export SMH_OAUTH_NAME={{ app_smh_oauth_name }}
# The URL for the ShareMyHealth server
# SMH_OAUTH_HOST="http://hixny-oauth2:8001"
# You will need to register an application on the ShareMyHealth server.
# SMH_OAUTH_KEY is the application's 'Client id'.
export SMH_OAUTH_KEY={{ app_smh_oauth_key}}
# You will need to register an application on the ShareMyHealth server.
# SMH_OAUTH_SECRET is the application's 'Client secret'.
SMH_OAUTH_SECRET={{ app_smh_oauth_secret }}

# Not used now..used in debugging mostly
# export SOCIAL_AUTH_GOOGLE_OIDC_ENDPOINT="https://accounts.google.com"
# export SOCIAL_AUTH_GOOGLE_URL="https://accounts.google.com"

# Upstream OIDC
# export SOCIAL_AUTH_GOOGLE_OAUTH2_KEY={{ app_social_auth_google_oauth2_key }}
# export SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET={{ app_social_auth_google_oauth2_secret }}
# export SOCIAL_AUTH_GOOGLE_OPENIDCONNECT_KEY={{ app_social_auth_google_openidconnect_key }}
# export SOCIAL_AUTH_GOOGLE_OPENIDCONNECT_SECRET={{ app_social_auth_google_openidconnect_secret }}

echo "{{ role_type }} 24 env variables were set"
