
# DJANGODIR/.env
# which settings file should Django use
# set {{ role_type }} environment variables for gunicorn_start / manage.py

# Django Secret Key
export SECRET_KEY='{{ django_secret_key }}'
# Debug Mode
export DEBUG='{{ django_debug }}'

export VPC_ENV='{{ vpc_env }}'
export VPC_APP_NAME='{{ system_repository_name[role_type] }}'
export USE_PARAMETER_STORE='{{ use_parameter_store }}'
export ENVIRONMENT_VARIABLE_STRATEGY='{{ environment_variable_strategy }}'
export EC2PARAMSTORE_4_ENVIRONMENT_VARIABLES='{{ ec2paramstore_4_env_vars }}'

# Django project directory
export DJANGODIR='{{ base_app_directory }}/{{ role_type }}'
export PRE_PYTHONPATH='{{ base_app_directory }}/{{ role_type }}'
export PYTHONPATH=$PRE_PYTHONPATH:$PYTHONPATH

# which settings file should Django use
export DJANGO_SETTINGS_MODULE='{{ system_repository_name[role_type] }}.settings'

# WSGI module name
export DJANGO_WSGI_MODULE='{{ system_repository_name[role_type] }}.wsgi'

# Postgres DB settings
export DATABASES_CUSTOM='postgres://{{ rds_username }}:{{ db_master_pw }}@{{ rds_endpoint }}:{{ env_rds_port }}/{{ role_type }}_{{ vpc_env }}'

export OIDC_ISSUER='{{ http_mode }}://{{ dns_app_name['vmi'] }}'
export OIDC_PROVIDER='{{ http_mode }}://{{ dns_app_name['vmi'] }}'

export ALLOWED_HOSTS={{ app_allowed_hosts }}

export DJANGO_APPLICATION_TITLE="{{ app_django_application_title }}"
export KILLER_APP_TITLE="{{ app_killer_app_title }}"
export KILLER_APP_URI="{{ app_killer_app_uri }}"
export TOP_LEFT_TiTLE="{{ app_top_left_title }}"

# Alternate Values for superuser
export DJANGO_SUPERUSER_USERNAME='{{ app_pyapps_user }}'
export DJANGO_SUPERUSER_PASSWORD='{{ app_pyapps_pwd }}'
export DJANGO_SUPERUSER_EMAIL={{ app_django_superuser_email }}
export DJANGO_SUPERUSER_FIRSTNAME="{{ app_django_superuser_firstname }}"
export DJANGO_SUPERUSER_LASTNAME="{{ app_django_superuser_lastname }}"

# Deprecated
# ROOT_USER / ROOT_USER_PASSWORD are deprecated
export ROOT_USER='{{ app_pyapps_user }}'
export ROOT_PASSWORD='{{ app_pyapps_pwd }}'

# We arent using the AWS credentials but soon will be based on emerging requirements
# AWS Settings
export AWS_DEFAULT_REGION='{{ aws_region }}'
export AWS_ACCESS_KEY_ID='{{ aws_access_key }}'
export AWS_SECRET_ACCESS_KEY='{{ aws_secret_key }}'

export AWS_STORAGE_BUCKET_NAME='{{ vpc_env }}-media-storage-{{ system_full_name[role_type] }}'

export DEFAULT_FILE_STORAGE='storages.backends.s3boto3.S3Boto3Storage'

# When adding OIDC PUB AND PRIVATE KEYS wrap ansible variable with single quotes

##########################################
# Connection to Verify My Identity (VMI) #
##########################################
export SOCIAL_AUTH_VERIFYMYIDENTITY_OPENIDCONNECT_NAME='{{ app_vmi_oauth_name }}'
# The URL for the VMI server
export SOCIAL_AUTH_VERIFYMYIDENTITY_OPENIDCONNECT_HOST='{{ http_mode }}://{{ dns_app_name['vmi'] }}'
# You will need to register an application on the VMI server.
# VMI_OATH_KEY is the application's 'Client id'.
export SOCIAL_AUTH_VERIFYMYIDENTITY_OPENIDCONNECT_KEY="{{ app_vmi_oauth_key }}"
# You will need to register an application on the VMI server.
# VMI_OATH_SECRET is the application's 'Client secret'.
export SOCIAL_AUTH_VERIFYMYIDENTITY_OPENIDCONNECT_SECRET="{{ app_vmi_oauth_secret }}"

###############################
# Connection to ShareMyHealth #
###############################
export SOCIAL_AUTH_SHAREMYHEALTH_NAME='{{ app_smh_oauth_name }}'
# The URL for the ShareMyHealth server
# SMH_OAUTH_HOST="http://hixny-oauth2:8001"
export  SOCIAL_AUTH_SHAREMYHEALTH_HOST='{{ http_mode }}://{{ dns_app_name['smh'] }}'
# You will need to register an application on the ShareMyHealth server.
# SMH_OAUTH_KEY is the application's 'Client id'.
export SOCIAL_AUTH_SHAREMYHEALTH_KEY='{{ app_smh_oauth_key}}'
# You will need to register an application on the ShareMyHealth server.
# SMH_OAUTH_SECRET is the application's 'Client secret'.
export SOCIAL_AUTH_SHAREMYHEALTH_SECRET='{{ app_smh_oauth_secret }}'

# Not used now..used in debugging mostly
# export SOCIAL_AUTH_GOOGLE_OIDC_ENDPOINT="https://accounts.google.com"
# export SOCIAL_AUTH_GOOGLE_URL="https://accounts.google.com"

# Upstream OIDC
# export SOCIAL_AUTH_GOOGLE_OAUTH2_KEY={{ app_social_auth_google_oauth2_key }}
# export SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET={{ app_social_auth_google_oauth2_secret }}
# export SOCIAL_AUTH_GOOGLE_OPENIDCONNECT_KEY={{ app_social_auth_google_openidconnect_key }}
# export SOCIAL_AUTH_GOOGLE_OPENIDCONNECT_SECRET={{ app_social_auth_google_openidconnect_secret }}

echo "{{ role_type }} 31 env variables were set"
