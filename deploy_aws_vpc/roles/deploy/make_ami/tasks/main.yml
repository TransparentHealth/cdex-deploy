---
# roles/deploy_make/tasks/main.yml
# Created: 2019-09-11
# cdex-deploy
# Purpose:
#
#    

- name: "create ami from server {{ variable_host }}"
  ec2_ami:
    instance_id: "{{ ec2_facts_info_id.instances.0.instance_id }}"
    wait: yes
    name:  "{{ role_type }}_{{ ansible_date_time.iso8601_basic_short }}"
    tags:
      Name: "{{ vpc_env }}_{{ role_type }}_{{ ansible_date_time.iso8601_basic_short }}"
      env: "{{ vpc_env }}"
      function: "{{ role_type }}"
      role:  "{{ role_type }}"
      birth: "{{ ansible_date_time.iso8601_basic_short }}"
      release: "{{ replacement_time }}"
      mode: "readytoattach"
  register: ami_info
  ignore_errors: true

# find ami
- name: find ami
  debug:
    msg: "Created AMI: {{ ami_info.image_id }}"

# create launch configuration
- name: "Create Launch Config Instance: {{ ami_info.tags.Name }}"
  ec2:
    region: "{{ aws_region}}"
    image: "{{ ami_info.image_id }}"
    instance_type: "{{ec2_app_instance_type[role_type] }}"
    instance_tags:
      role: "{{ role_type }}"
      env: "{{ vpc_env }}"
      function: "ScalingInstance"
      Name: "{{ vpc_env}}_{{ role_type }}"
      workflow: "release"
      release: "{{ replacement_time }}"
    wait: yes
    vpc_subnet_id: "{{ vpc_app_subnet_id }}"
    count: 1
    key_name: "{{ ansible_ssh_private_key_name }}"
    assign_public_ip: no
    state: present
  register: created_instance

# get instance id
- name: "get instance id: {{ created_instance.id }}"
  debug:
    msg: "EC2 Instance: {{ created_instance.name }}[{{ created_instance.id }}]  "

# add instance to scalable group

- name: Create Launch Configuration
  ec2_lc:
    region: "{{ aws_region }}"
    name: "{{ vpc_env}}_{{ role_type }}_LC_{{ replacement_time }}"
    image_id: "{{ ami.image_id }}"
    key_name: "{{ keypair }}"
    instance_type: "{{ instance_type }}"
    security_groups: "{{ security_groups }}"
    volumes: "{{ volumes }}"
    instance_monitoring: yes
# add group to target group

# add target group to ALB





