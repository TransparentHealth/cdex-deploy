---
# 2019-08-27.17:41 - mark
# cdex-deploy
# playbook/server/server_app_parameters.yml
#
# Check out AWS SSM Parameter Store

- name: configure server
  hosts: "{{ variable_host| default('tag_function_BaseInstance:tag_workflow_JustCreated') }}"
  remote_user: "{{ remote_user_account }}"
  vars:
    ansible_ssh_pipelining: no
    env: "{{ vpc_env }}"
    # Options - lower case: staging | prod
    azone: "az1"
    # Options: az1 | az2 | az3
    sub_zone: "app"
    role_type: "{{ role_type| default('vmi') }}"
    # Options: vmi | smh | smhapp

    sg_zone: "{{ vpc_env }}-{{ role_type }}-APP"
    env_az: "{{ vpc_env }}-{{ azone }}"
    #    env_cf_data_version: "20"
    #    env_cf_app_version: "01"
    build_subnet_id: null
  vars_files:
    - "./../../vars/common.yml"
    - "./../../vault/environment/{{ vpc_env }}/vault.yml"
    - "./../../vars/environment/{{ vpc_env }}/env.yml"

  tasks:
#    - name: prepare string got lookup
#      set_fact:
#        -
    - name: "Check out parameter store"
      debug:
        msg: "{{ lookup('aws_ssm', '/dev/vmi', region=\'{{ aws_region }}\', bypath=true, recursive=true ) }}"

    - name: "Create S3 bucket for {{ vpc_env }}-{{ system_full_name[role_type] }}"
      s3_bucket:
        name: "{{ vpc_env }}-media-storage-{{ system_full_name[role_type] }}"
        region: "{{ aws_region }}"
        state: present
        tags:
          env: "{{ vpc_env }}"
          role: "{{ role_type }}"
          function: "media-storage"

    - name: "set values in parameter store for {{ vpc_env }}/{{ role_type }}"
      aws_ssm_parameter_store:
        name: "{{ item.name }}"
        region: "{{ aws_region }}"
        state: present
        string_type: "{{ item.type }}"
        value: "{{ item.value }}"
      with_items:
        - { name: "/{{ env }}/{{ role_type }}/AWS_STORAGE_BUCKET_NAME", value: "{{ vpc_env }}-media-storage-{{ system_full_name[role_type] }}" , type: "String" }
        - { name: "/{{ env }}/{{ role_type }}/AWS_DEFAULT_REGION", value: "{{ aws_region }}", type: "String" }
        - { name: "/{{ env }}/{{ role_type }}/DEFAULT_FILE_STORAGE", value: "storages.backends.s3boto3.S3Boto3Storage", type: "String" }
        - { name: "/{{ env }}/{{ role_type }}/HOSTNAME_URL", value: "{{ http_mode }}://{{ dns_app_name[role_type] }}", type: "String" }
        - { name: "/{{ env }}/{{ role_type }}/ROOT_PASSWORD", value: "{{ app_pyapps_pwd }}", type: "SecureString" }
        - { name: "/{{ env }}/{{ role_type }}/ROOT_USER", value: "{{ app_pyapps_user }}", type: "SecureString" }
        - { name: "/{{ env }}/{{ role_type }}/database/DATABASES_CUSTOM", value: "postgres://{{ rds_username }}:{{ db_master_pw }}@{{ rds_endpoint }}:{{ env_rds_port }}/{{ role_type }}_{{ vpc_env }}", type: "SecureString" }
        - { name: "/{{ env }}/{{ role_type }}/eb/ALLOWED_HOSTS", value: "{{ dns_app_name[role_type] }}", type: "String" }
        - { name: "/{{ env }}/{{ role_type }}/eb/OIDC_ISSUER", value: "{{ http_mode }}://{{ dns_app_name['vmi'] }}", type: "String" }

