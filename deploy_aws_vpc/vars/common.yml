---
# var/common.yml
# Store variables that are common across all environments

system_descriptive_name:
  vmi: "Verify My Identity"
  smh: "Share My Health"
  smh_app: "Share My Health Apps"

system_repository_name:
  vmi: "vmi"
  smh: "sharemyhealth"
  smh_app: "smh_app"

ansible_ssh_private_key_file: "{{ env_ansible_ssh_private_key_file }}"
ansible_ssh_private_key_name: "{{ env_ansible_ssh_private_key_name }}"

system_full_name: {"vmi": "verifymyidentity", "smh": "sharemyhealth", "smh_app": "sharemyhealthapp"}

dns_app_name: "{{ env_dns_app_name }}"

deployment_server_name: "abhealth_deploy_server_{{ vpc_env }}"

# ubuntu 18.04 with Python3.6
# base_ami: "ami-07d0cf3af28718ef8"
# ubuntu 16.04 with Python3.5
# base_ami: "ami-0cfee17793b08a293"
base_ami: "{{ env_base_ami }}"

python_version: "{{ env_python_version }}"
# http or https
http_mode: "{{ env_http_mode }}"

# base_instance_elastic_ip: "3.227.187.144"
base_instance_elastic_ip: "34.229.8.6"

aws_access_key: "{{ env_aws_access_key }}"
aws_secret_key: "{{ env_aws_secret_key }}"

remote_user_account: "{{ env_remote_user_account }}"
remote_admin_account: "{{ env_remote_admin_account }}"

# This is the directory that the apps are cloned into
# each app will be in a different sub0directory under this base directory
base_app_directory: "{{ env_base_app_directory }}"

# create a virtual environment directory in the env directory of the app.
# eg. if vmi is installed to /pyapps/vmi the env dir for the virtual env is in /pyapps/vmi/env
virtual_env_dir: "env"

# pip install extra arguments needed:
# when FIPS-140.2 is enabled MD5 checksums are not supported.
# This causes pip to fail.
# check file: /proc/sys/crypto/fips_enabled
# 1 = Enabled | 0 = disabled
# If enabled we need to pass -i https://pypi.org/simple/ to extra_args
# in ansible pip command
# pip_extra_args: " -i https://pypi.org/simple/ "
pip_extra_args: ""

app_owner: "{{ app_pyapps_user }}"
# application group: nginx
app_group: "www-data"

# Python information
# Version - ubuntu installs Python3.6 by default
python_ver: "3.6"
python_bin_dir: "/usr/bin"

#RDS DB_NAME
rds_db_name: "{{ env_rds_db_name }}"

# RDS Username
rds_username: "{{ env_rds_username }}"

db_master_pw: "{{ env_db_master_pw }}"

# nginx settings
allowed_ips: "{{ env_allowed_ips }}"

# django settings
# set a variable entrypoint for the admin console.
# confuses scanners looking for known endpoints

django_admin_redirector: "private/"

git_branch: "{{ env_git_branch }}"

rds_endpoint: "{{ env_rds_endpoint }}"
rds_port: "{{ env_rds_port }}"

vpc_app_subnet_id: "{{ env_vpc_app_subnet_id }}"

app_security_group_id: "{{ env_app_security_group_id }}"

ext_nginx_server_names: "{{ env_ext_nginx_server_names }}"

### Deployment

target_group_name: "{{ env_target_group_name }}"
vpc_id: "{{ env_vpc_id }}"

alb_subnets: "{{ env_alb_subnets }}"

ssl_cert_arn: "{{ env_ssl_cert_arn }}"

lc_name: "{{ env_lc_name }}"

asg_name: "{{ env_asg_name }}"

asg_min_size: "{{ env_asg_min_size }}"
asg_max_size: "{{ env_asg_max_size }}"
asg_wait_timeout: "300"
asg_health_check_period: "300"


availability_zones: "{{ env_availability_zones }}"
alb_ssl_policy_name: "ELBSecurityPolicy-2016-08"
